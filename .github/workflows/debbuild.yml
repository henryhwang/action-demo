name: Build debian package
on:
  workflow_dispatch
jobs:
  do-in-container:
    runs-on: ubuntu-latest
    container: 
      image: debian:sid
      env:
        DEBIAN_FRONTEND: noninteractive
    steps:
      - name: demo
        run: |
          apt-get update
          apt-get -y -qq install ninja-build gettext cmake unzip curl git file
          git clone https://github.com/neovim/neovim
          cd neovim && make CMAKE_BUILD_TYPE=RelWithDebInfo
          cpack --config build/CPackConfig.cmake -G DEB
          ls -l build
          ls -l build/bin
  action-in-container:
    runs-on: ubuntu-latest
    container:
      image: debian:sid
      env:
        DEBIAN_FRONTEND: noninteractive
    steps:
      - name: install dependnecies and tools
        run: |
          apt-get update && apt-get -y -qq -o=Dpkg::Use-Pty=0 upgrade
          apt-get -y -qq -o=Dpkg::Use-Pty=0 install ninja-build gettext cmake unzip curl git file
      - name: get source using action
        uses: actions/checkout@v4
        with:
          repository: neovim/neovim
      - name: show content of pwd
        run: |
          pwd
          ls -la
  build-for-arm64:
    runs-on: ubuntu-latest
    steps:
      # - name: update apt source
      #   run: |
      #     apt-get update
      - name: install qemu-user-static
        run: |
          # apt-get update
          # apt-get -qq install qemu-user-static
          docker run --rm --privileged multiarch/qemu-user-static --reset -p yes -c yes
      - name: run arm64 container
        run: |
          docker run --rm --platform linux/arm64 debian:bullseye uname -a
